trigger:
  branches:
    include:
      - main

resources:
  - repo: self

pool:
  vmImage: 'ubuntu-latest'

variables:
  azureSubscription: 'RookieB7'
  azureEnvironment: 'deploy api'
  webAppName: 'api-asset-management'

stages:
  - stage: Build
    displayName: 'Build and Test'
    jobs:
      - job: Api_Asset_Management_NestJS
        displayName: 'Lint, Test, and Audit NestJS'
        steps:
          - task: NodeTool@0
            inputs:
              versionSpec: '20.x'
            displayName: 'Install Node.js'

          - script: |
              npm install -g @nestjs/cli
              npm install
              npm run prisma:generate
            displayName: 'Install dependencies'

          - script: |
              npm run lint
            displayName: 'Run lint'

          - script: |
              npm run gitleaks
            displayName: 'Run GitLeaks'

          - script: |
              npm run test
            displayName: 'Run tests'

          - script: |
              npm audit --audit-level=high
            displayName: 'Run npm audit'
            continueOnError: true

          - script: |
              npm run build
            displayName: 'Build project'

          - script: |
              rm -rf node_modules
            displayName: 'Remove node_modules directory'

          - task: ArchiveFiles@2
            displayName: 'Archive files'
            inputs:
              rootFolderOrFile: '$(System.DefaultWorkingDirectory)'
              includeRootFolder: false
              archiveType: zip
              archiveFile: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
              replaceExistingArchive: true

          - publish: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
            artifact: drop

  - stage: Deploy
    displayName: 'Deploy to Azure Web App'
    dependsOn: Build
    condition: succeeded()
    jobs:
      - deployment: Deploy
        displayName: 'Deploy Job'
        environment: $(azureEnvironment)
        strategy:
          runOnce:
            deploy:
              steps:
                - task: AzureWebApp@1
                  inputs:
                    azureSubscription: $(azureSubscription)
                    appType: 'webAppLinux'
                    appName: $(webAppName)
                    runtimeStack: 'NODE|20-lts'
                    package: $(Pipeline.Workspace)/drop/$(Build.BuildId).zip
                    startUpCommand: 'npm install -g npm@10.8.1 --force && npm install && npm rebuild bcrypt --build-from-source && npm run prisma:generate && npm run start:prod'
