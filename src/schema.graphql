# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type User {
  id: ID!
  firstName: String!
  staffCode: String!
  lastName: String!
  username: String!
  gender: String!
  joinedDate: String!
  dateOfBirth: String!
  type: String!
  state: Boolean!
  location: String!
}

type FindUsersOutput {
  page: Int
  limit: Int
  total: Int
  totalPages: Int
  users: [User!]!
}

type Asset {
  id: ID!
  assetCode: String!
  assetName: String!
  categoryId: Int!
  installedDate: String!
  isRemoved: Boolean!
  isAllowRemoved: Boolean!
  isReadyAssigned: Boolean!
  state: String!
  location: String!
  specification: String
  category: Category!
}

type FindAssetsOutput {
  page: Int
  limit: Int
  total: Int
  totalPages: Int
  assets: [Asset!]!
}

type Category {
  id: ID!
  categoryName: String!
  categoryCode: String!
}

type ReportElement {
  categoryName: String!
  total: Int!
  assigned: Int!
  available: Int!
  notAvailable: Int!
  waitingForRecycling: Int!
  recycled: Int!
}

type ReportResponse {
  page: Int
  limit: Int
  total: Int
  totalPages: Int
  data: [ReportElement!]!
}

type Assignment {
  id: Int!
  assetCode: String!
  assetName: String!
  assigner: User!
  assignee: User!
  state: String!
  note: String
  assignedDate: String!
  asset: Asset!
  assignedByUsername: String
  assignedToUsername: String
}

type FindAssignmentsOutput {
  page: Int
  limit: Int
  total: Int
  totalPages: Int
  assignments: [Assignment!]!
}

type RequestReturn {
  id: Int!
  assetId: Int!
  assignmentId: Int!
  requestedById: Int!
  acceptedById: Int!
  assignedDate: String!
  returnedDate: String!
  state: String!
  isRemoved: Boolean!
}

type FindRequestReturnsOutput {
  page: Int
  limit: Int
  total: Int
  totalPages: Int
  requestReturns: [RequestReturn!]!
}

type Query {
  findUsers(request: FindUsersInput!): FindUsersOutput!
  user(id: Int!): User!
  findAssets(request: FindAssetsInput!): FindAssetsOutput!
  findOneAsset(id: Int!): Asset!
  getCategories: [Category!]!
  getReport(reportInput: ReportInput!): ReportResponse!
  findAssignments(findAssignmentsInput: FindAssignmentsInput!): FindAssignmentsOutput!
  assignment(id: Int!): Assignment!
  getListOwnAssignment(findAssignmentsInput: FindAssignmentsInput!): FindAssignmentsOutput!
  findRequestReturns(request: FindRequestReturnsInput!): FindRequestReturnsOutput!
  findOneRequestReturn(id: Int!): RequestReturn!
}

input FindUsersInput {
  page: Int = 1
  limit: Int = 20
  query: String
  sortOrder: String = "asc"
  type: [String!]
  sort: String = "firstName"
}

input FindAssetsInput {
  page: Int = 1
  limit: Int = 20
  query: String
  sortOrder: String = "asc"
  sortField: String = "assetCode"
  stateFilter: [String!]
  categoryFilter: [String!]
}

input ReportInput {
  page: Int = 1
  limit: Int = 20
  sortOrder: String = "asc"
  sort: String = "categoryName"
}

input FindAssignmentsInput {
  page: Int = 1
  limit: Int = 20
  query: String
  sortOrder: String = "asc"
  state: [String!]
  sort: String = "assetName"
  assignedDate: String
}

input FindRequestReturnsInput {
  page: Int = 1
  limit: Int = 20
  query: String
  sortOrder: String = "asc"
  sortField: String = "id"
  stateFilter: [String!]
  returnedDateFilter: String
}

type Mutation {
  createUser(createUserInput: CreateUserInput!): User!
  updateUser(updateUserInput: UpdateUserInput!, id: Float!): User!
  disableUser(id: Int!): Boolean!
  createAsset(createAssetInput: CreateAssetInput!): Asset!
  updateAsset(id: Int!, updateAssetInput: UpdateAssetInput!): Asset!
  deleteAsset(id: Int!): Asset!
  createCategory(createCategoryInput: CreateCategoryInput!): Category!
  createAssignment(createAssignmentInput: CreateAssignmentInput!): Assignment!
  removeAssignment(id: Int!): Boolean!
  updateAssignment(id: Int!, updateAssignmentInput: UpdateAssignmentInput!): Assignment!
  updateStatusAssignment(updateStatusAssignmentInput: UpdateStatusAssignmentInput!): Boolean!
  createRequestReturn(request: CreateRequestReturnInput!): RequestReturn!
  completeRequestReturn(id: Int!): RequestReturn!
  deleteRequestReturn(id: Int!): RequestReturn!
}

input CreateUserInput {
  firstName: String!
  lastName: String!
  gender: String!
  joinedDate: String!
  dateOfBirth: String!
  type: String!
  location: String
}

input UpdateUserInput {
  gender: String
  joinedDate: String
  dateOfBirth: String
  type: String
  location: String
}

input CreateAssetInput {
  """Name of the asset"""
  assetName: String!

  """ID of the category"""
  categoryId: Int!

  """Specification of the asset"""
  specification: String

  """Date the asset was installed"""
  installedDate: String!

  """State of the asset"""
  state: String!
}

input UpdateAssetInput {
  """Name of the asset"""
  assetName: String!

  """Specification of the asset"""
  specification: String

  """Date the asset was installed"""
  installedDate: String!

  """State of the asset"""
  state: String!
}

input CreateCategoryInput {
  categoryName: String!
  categoryCode: String!
}

input CreateAssignmentInput {
  assetCode: String!
  assetName: String!
  assignedToId: Int!
  assignedToUsername: String!
  assignedDate: String!
  note: String
  assetId: Int!
}

input UpdateAssignmentInput {
  assetCode: String
  assetName: String
  assignedToId: Int
  assignedToUsername: String
  assignedDate: String
  note: String
  assetId: Int
}

input UpdateStatusAssignmentInput {
  id: Int!

  """assignment status"""
  state: String!
}

input CreateRequestReturnInput {
  assetId: Int!
  assignmentId: Int!
  requestedById: Int!
  assignedDate: String!
}